{
    "homepage": "https://github.com/FriendsOfGalaxy/galaxy-integration-steam",
    "version": "0.57",
    "depends": "sudo",
    "url": "https://github.com/FriendsOfGalaxy/galaxy-integration-steam/releases/download/v0.57/windows.zip",
    "hash": "f56a77317bcb6fc73ade85f6bf5fd4d339553b07d5682c46b3e2537adf231f7d",
    "extract_to": "integration",
    "uninstaller": {
        "script": "(Get-Item \"$env:LOCALAPPDATA\\GOG.com\\Galaxy\\plugins\\installed\\steam\").Delete()"
    },
    "post_install": [
        "$integration = \"steam\"",
        "$wildcard = \"*steam*\"",
        "$gi_path = \"$env:LOCALAPPDATA\\GOG.com\\Galaxy\\plugins\\installed\"",
        "$path = \"$gi_path\\$integration\"",
        "$source = \"$scoopdir\\apps\\$app\\current\\integration\"",
        "$link = $true",
        "if (Test-Path $path) {",
        "    $backup_path = \"$persist_dir\\backup\"",
        "    if ($(Get-Item $path | Select-Object -ExpandProperty Target) -eq $source) {",
        "        $link = $false",
        "    } else {",
        "        if (!(Test-Path $persist_dir)) {",
        "            New-Item \"$persist_dir\" -Type Directory | Out-Null",
        "        }",
        "        Move-Item $path $backup_path",
        "        Write-Host \"WARNING:\" -f Yellow",
        "        Write-Host \"Integration directory already exists, I've moved the existing files here:\" -f Yellow",
        "        Write-Host $backup_path -f Red",
        "    }",
        "}",
        "$userRole = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())",
        "if (!($userRole.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator))) {",
        "    Write-Host \"NOTE:\" -f Yellow",
        "    Write-Host \"This installer can also attach the newly installed integration folder to GOG Galaxy.\" -f Yellow",
        "    Write-Host \"If you choose to do so, you will need to Administrator permission (you'll be asked to approve.)\" -f Yellow",
        "} else {",
        "    $response=\"Y\"",
        "}",
        "$msg = 'Would you like to attach this integration folder to GOG Galaxy programmatically? [Y/N]'",
        "while(\"Y\",\"N\" -notcontains $response) {",
        "    $response =  (Read-Host -Prompt $msg).ToUpper()",
        "}",
        "if ($response -eq \"N\") {",
        "    Write-Host \"No worries! Just make sure you follow these steps:\" -f Yellow",
        "    Write-Host \"1) Open a Command Prompt via (Run as Administrator)\" -f Yellow",
        "    Write-Host \"2) Run:\" -f Yellow",
        "    Write-Host \"mklink /D $([char]0x22)%localappdata%\\GOG.com\\Galaxy\\plugins\\installed\\$integration$([char]0x22) $([char]0x22)$scoopdir\\apps\\$app\\current\\integration$([char]0x22)\" -f Yellow",
        "} elseif ($link) {",
        "    sudo New-Item -ItemType SymbolicLink -Path $path -Target $source 2`>`&1 `> symlink.log",
        "    $installed = Get-ChildItem -Path $gi_path -Depth 0 -Filter $wildcard | % { $_.FullName }",
        "    If ($installed.count -gt 1) {",
        "        Write-Host \"WARNING:\" -f Yellow",
        "        Write-Host \"Installer found multiple integrations installed for $integration, this will likely cause issues with GOG Galaxy...\" -f Yellow",
        "        Write-Host \"Please review the entries below and make sure they are currect:\" -f Yellow",
        "        $installed",
        "        Write-Host \"Here's what you can do:\" -f Yellow",
        "        Write-Host \"1) Keep the '$path'\" -f Yellow",
        "        Write-Host \"2) Backup and remove the additional folders (renaming will not work!)\" -f Yellow",
        "        Write-Host \"3) Restart GOG Galaxy\" -f Yellow",
        "    }",
        "    if ($(Get-Item $path | Select-Object -ExpandProperty Target) -eq $source) {",
        "        Write-Host \"The integration was successfully attached! Make sure to restart GOG Galaxy to make it effective.\" -f Green",
        "    } else {",
        "        Write-Host \"Oops! Something's not right. The $app integration was installed, but the symlink was not possible.\" -f Red",
        "    }",
        "}"
    ],
    "checkver": {
        "github": "https://github.com/FriendsOfGalaxy/galaxy-integration-steam",
        "re": "Version v(?<version>[\\d\\w.]+)"
    },
    "autoupdate": {
        "url": "https://github.com/FriendsOfGalaxy/galaxy-integration-steam/releases/download/v$version/windows.zip"
    }
}
